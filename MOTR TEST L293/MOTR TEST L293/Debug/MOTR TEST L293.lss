
MOTR TEST L293.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ba  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000ba  0000012e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000130  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  000007fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000893  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000008c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000001ab  00000000  00000000  000008e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000e1  00000000  00000000  00000a8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001b0  00000000  00000000  00000b6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00000d20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000100  00000000  00000000  00000d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00000e44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#define F_CPU 1000000UL
#include <avr/io.h>
#include <util/delay.h>
int main(void)
{DDRA=0XFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	PORTA=0XFF;
  70:	8b bb       	out	0x1b, r24	; 27
    while(1)
    {
        PORTA=0b01010101;
  72:	25 e5       	ldi	r18, 0x55	; 85
		_delay_ms(5000);
		PORTA=0b01010100;
  74:	94 e5       	ldi	r25, 0x54	; 84
		_delay_ms(5000);
		PORTA=0b01010110;
  76:	86 e5       	ldi	r24, 0x56	; 86
int main(void)
{DDRA=0XFF;
	PORTA=0XFF;
    while(1)
    {
        PORTA=0b01010101;
  78:	2b bb       	out	0x1b, r18	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7a:	3f e3       	ldi	r19, 0x3F	; 63
  7c:	42 e4       	ldi	r20, 0x42	; 66
  7e:	5f e0       	ldi	r21, 0x0F	; 15
  80:	31 50       	subi	r19, 0x01	; 1
  82:	40 40       	sbci	r20, 0x00	; 0
  84:	50 40       	sbci	r21, 0x00	; 0
  86:	e1 f7       	brne	.-8      	; 0x80 <main+0x14>
  88:	00 c0       	rjmp	.+0      	; 0x8a <main+0x1e>
  8a:	00 00       	nop
		_delay_ms(5000);
		PORTA=0b01010100;
  8c:	9b bb       	out	0x1b, r25	; 27
  8e:	3f e3       	ldi	r19, 0x3F	; 63
  90:	42 e4       	ldi	r20, 0x42	; 66
  92:	5f e0       	ldi	r21, 0x0F	; 15
  94:	31 50       	subi	r19, 0x01	; 1
  96:	40 40       	sbci	r20, 0x00	; 0
  98:	50 40       	sbci	r21, 0x00	; 0
  9a:	e1 f7       	brne	.-8      	; 0x94 <main+0x28>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <main+0x32>
  9e:	00 00       	nop
		_delay_ms(5000);
		PORTA=0b01010110;
  a0:	8b bb       	out	0x1b, r24	; 27
  a2:	3f e3       	ldi	r19, 0x3F	; 63
  a4:	42 e4       	ldi	r20, 0x42	; 66
  a6:	5f e0       	ldi	r21, 0x0F	; 15
  a8:	31 50       	subi	r19, 0x01	; 1
  aa:	40 40       	sbci	r20, 0x00	; 0
  ac:	50 40       	sbci	r21, 0x00	; 0
  ae:	e1 f7       	brne	.-8      	; 0xa8 <main+0x3c>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x46>
  b2:	00 00       	nop
  b4:	e1 cf       	rjmp	.-62     	; 0x78 <main+0xc>

000000b6 <_exit>:
  b6:	f8 94       	cli

000000b8 <__stop_program>:
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <__stop_program>

;
; M32ASSEM_CH10-INTERRUPTS.asm
;
; Created: 08/04/2018 14:32:04
; Author : Mahmoud Saad_ZeroX86
;



/*
.INCLUDE "M32DEF.INC"

.ORG 0X00
JMP MAIN

.ORG 0X02
JMP INT0_ISR

.ORG 0X100
MAIN :	
			LDI R16,HIGH(RAMEND)
			OUT SPH,R16
			LDI R16,LOW(RAMEND)
			OUT SPL,R16

			LDI R16,(1<<INT0)
			OUT GICR,R16
			SEI

			LDI R16,0X00
			OUT DDRC,R16
			COM R16
			OUT DDRD,R16

			SBI PORTD,2	;ENABLE THE PULL-UP RESISTOR
			SBI DDRA,3

			;LDI R16,(0<<ISC01)|(0<<ISC00)	;WHILE LOW
			;OUT MCUCR,R16

			;LDI R16,(0<<ISC01)|(1<<ISC00)	;WHEN GETTING LOW OR HIGH,+VE OR -VE RISING EDGES
			;OUT MCUCR,R16

			;LDI R16,(1<<ISC01)|(0<<ISC00)	;WHEN -VE RISING EDGE
			;OUT MCUCR,R16

			;LDI R16,(1<<ISC01)|(1<<ISC00)	;WHEN +VE RISING EDGE
			;OUT MCUCR,R16

			
WHILEONE :  ;IN R18,PINC
			;OUT PORTD,R18
			RJMP WHILEONE

RJMP MAIN

INT0_ISR :
			IN R16,PORTA
			LDI R17,(1<<3)
			EOR R16,R17
			OUT PORTA,R16
RETI
*/



/*
;INT0 INITIALIZATION
.INCLUDE "M32DEF.INC"
.ORG 0X00
JMP MAIN
.ORG 0X02   ;INT0 address
JMP INT0_ISR

.ORG 0X100
MAIN :
		LDI R16,HIGH(RAMEND)	 ;RAM INIT
		OUT SPH,R16
		LDI R16,LOW(RAMEND)
		OUT SPL,R16
		LDI R16,0XFF		;DDRA=OUTPUT
		OUT DDRA,R16
		SBI DDRC,3		;
		SBI PORTD,2  ;PULL UP RES ACTIVATED

		LDI R16,(1<<INT0)
		OUT GICR,R16
		SEI
 .DEF COUNTER=R20
 LDI COUNTER,0X00

  WHILEONE :	
		INC COUNTER
		OUT PORTA,COUNTER
  RJMP WHILEONE
RJMP MAIN

INT0_ISR :
IN R16,PORTC
LDI R17,1<<3
EOR R16,R17
OUT PORTC,R16
RETI
*/



/*
.INCLUDE "M32DEF.INC"
.ORG 0X00
JMP MAIN

.ORG 0X0E
JMP T1_CTC_ISR

MAIN :

;TIMER1 INIT,CTC MODE,FOR ONE SECOND
LDI R16,0X00
OUT TCNT1H,R16
OUT TCNT1L,R16
OUT DDRC,R16
COM R16
OUT DDRD,R16
LDI R16,HIGH(10)
OUT OCR1AH,R16
LDI R16,LOW(10)
OUT OCR1AL,R16

LDI R16,0X00
OUT TCCR1A,R16
LDI R16,0X0B
OUT TCCR1B,R16


LDI R16,(1<<OCIE1A)
OUT TIMSK,R16
SEI

SBI DDRB,5

WHILEONE :
IN R16,PINC
OUT PORTD,R16
RJMP WHILEONE
RJMP MAIN


T1_CTC_ISR :
IN R16,PORTB
LDI R17,(1<<5)
EOR R16,R17
OUT PORTB,R16
LDI R16,0X00
OUT TCNT1H,R16
OUT TCNT1L,R16
RETI
*/


/*
.INCLUDE "M32DEF.INC"
.ORG 0X00
JMP MAIN

.ORG 0X14
JMP T0_CTC_ISR
.ORG 0X12
JMP T1_OV_ISR

.DEF COUNTER=R20

.ORG 0X100
MAIN :		
			
			SEI ;UNMASK THE GLOBAL INTERRUPT
			LDI R16,(1<<TOIE1)|(1<<OCIE0);ENABLE TIMERS' INTERRUPTS
			OUT TIMSK,R16
			;T1 INIT>>NEED TO OVERFLOW EVERY 1 SEC ,I USED PRESCALER OF 64 SO WILL PUT 49911 IN TCNT1=C2F7
			LDI R16,HIGH(0XC2F7)
			OUT TCNT1H,R16
			LDI R16,LOW(0XC2F7)
			OUT TCNT1L,R16
			LDI R16,0X00
			OUT TCCR1A,R16
			LDI R16,0X03	;USING PRESCALER OF 64
			OUT TCCR1B,R16
			;T0 INIT>>CTC MODE,OCR=200,ON THE RISING EDGE
			LDI R16,0X00
			OUT TCNT0,R16
			LDI R16,200
			OUT OCR0,R16
			LDI R16,0X0F
			OUT TCCR0,R16

			LDI R16,0XFF
			OUT DDRA,R16
			OUT DDRD,R16
			COM R16
			OUT DDRC,R16
			CBI DDRB,0
			SBI DDRB,6

WHILEONE :	
		IN  R16,PINC
		OUT PORTD,R16
RJMP WHILEONE



RJMP MAIN

T0_CTC_ISR :
			IN R16,PORTB
			LDI R17,(1<<6)
			EOR R16,R17
			OUT PORTB,R16
			LDI R16,0X00
			OUT TCNT0,R16
RETI

LDI COUNTER,0X00
T1_OV_ISR :
			INC COUNTER
			OUT PORTA,COUNTER
			LDI R16,HIGH(0XC2F7)
			OUT TCNT1H,R16
			LDI R16,LOW(0XC2F7)
			OUT TCNT1L,R16
RETI
		
*/



























/*.INCLUDE "M32DEF.INC"
;BYPASSING THE INTERRUPT VECTOR TABLE AS IT'LL BE USED IN THIS PROG.
.ORG 0X00
JMP MAIN 
.ORG 0X12
JMP T1_OV_ISR
;SETTING THE ADDRESS OF THE ISR IN THE IVT
.ORG 0X16
JMP T0_OV_ISR 

.ORG 0X100
MAIN :
				;STACK INITIALIZATION AS WILL BE A CRITICAL PART OF THE PROGRAM FLOW
LDI R16,HIGH(RAMEND)
OUT SPH,R16
LDI R16,LOW(RAMEND)
OUT SPL,R16
				;SETTING PORT C AS INPUT AND PORT D AS THE OUTPUT
LDI R16,0X00
OUT DDRC,R16
LDI R16,0XFF
OUT DDRD,R16
SBI DDRB,5
SBI DDRB,7
				;TIMER0 INITIALIZATION
LDI R16,-160		;FOR 4US
OUT TCNT0,R16
LDI R16,0X01	;NORMAL MODE,NOPRESCALE
OUT TCCR0,R16

				;TIMER1 INITIALIZATION
LDI R16,HIGH(-640)
OUT TCNT1H,R16
LDI R16,LOW(-640)
OUT TCNT1L,R16
LDI R16,0X00
OUT TCCR1A,R16
LDI R16,0X01	;NORMAL MODE,NOPRESCALE
OUT TCCR1B,R16

SEI				;UNMASKING THE GENERAL INTERRUPT
LDI R16,(1<<TOIE0)|(1<<TOIE1)
OUT TIMSK,R16	;UNMASKING THE TIMER0 & TIMER1 OVERFLOW INTERRUPT
WHILEONE :
		IN  R16,PINC
		OUT PORTD,R16
RJMP WHILEONE
	
RJMP MAIN

T1_OV_ISR :
IN R16,PORTB	
LDI R17,(1<<7)
EOR R16,R17
OUT PORTB,R16
LDI R16,HIGH(-640)
OUT TCNT1H,R16
LDI R16,LOW(-640)
OUT TCNT1L,R16
RETI


T0_OV_ISR :
SEI
IN  R16,PORTB
LDI R17,(1<<5);>>0B00100000
EOR R16,R17;EXORING WITH ZEROS WILL GIVE THE SAME AS INPUT AND EXORING WITH ONE CHANGES THE VAL. WAS INPUT
OUT PORTB,R16
LDI R16,-160
OUT TCNT0,R16
RETI			;RETURN FROM THE INTERRUPT*/
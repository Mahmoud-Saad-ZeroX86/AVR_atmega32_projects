
M32C_LED_MATRIX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000124  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000178  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007a6  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000059a  00000000  00000000  000009aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033f  00000000  00000000  00000f44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001284  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032a  00000000  00000000  000012a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000015e  00000000  00000000  000015d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001730  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 90 00 	jmp	0x120	; 0x120 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define DELAY 1500
#define UP PORTC
#define  DWN PORTA  
int main(void)
{
	DDRC=0xff;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	84 bb       	out	0x14, r24	; 20
	DDRA=0xff;
  70:	8a bb       	out	0x1a, r24	; 26
	    
	    var1++;
		if(var1 == 0)
		var2++;
		
	    UP  = 0b00011000;//////////////
  72:	08 e1       	ldi	r16, 0x18	; 24
	    DWN = 0b01111111;
  74:	1f e7       	ldi	r17, 0x7F	; 127
	    _delay_us(DELAY);
	    UP  = 0b00100100;///////////////
  76:	d4 e2       	ldi	r29, 0x24	; 36
	    DWN = 0b10111111;
  78:	cf eb       	ldi	r28, 0xBF	; 191
	    
		
		_delay_us(DELAY);
	    UP  = 0b01000010;//////////////
  7a:	b2 e4       	ldi	r27, 0x42	; 66
	    DWN = 0b11011111;
  7c:	af ed       	ldi	r26, 0xDF	; 223
	    _delay_us(DELAY);
		
		
	    UP  = 0b00001000;//////////////
  7e:	f8 e0       	ldi	r31, 0x08	; 8
	    DWN = 0b11101111;
  80:	ef ee       	ldi	r30, 0xEF	; 239
	    _delay_us(DELAY);
	    UP  = 0b10010010;//////////////
  82:	72 e9       	ldi	r23, 0x92	; 146
	    DWN = 0b11110111;
  84:	67 ef       	ldi	r22, 0xF7	; 247
	    _delay_us(DELAY);
	    UP  = 0b01111100;//////////////
  86:	5c e7       	ldi	r21, 0x7C	; 124
	    DWN = 0b11111011;
  88:	4b ef       	ldi	r20, 0xFB	; 251
	    _delay_us(DELAY);
	    UP  = 0b00010000;//////////////
  8a:	30 e1       	ldi	r19, 0x10	; 16
	    DWN = 0b11111101;
  8c:	2d ef       	ldi	r18, 0xFD	; 253
	    _delay_us(DELAY);
	    UP  = 0b00111000;//////////////
  8e:	0f 2e       	mov	r0, r31
  90:	f8 e3       	ldi	r31, 0x38	; 56
  92:	ff 2e       	mov	r15, r31
  94:	f0 2d       	mov	r31, r0
	    DWN = 0b11111110;
  96:	0f 2e       	mov	r0, r31
  98:	fe ef       	ldi	r31, 0xFE	; 254
  9a:	ef 2e       	mov	r14, r31
  9c:	f0 2d       	mov	r31, r0
	    
	    var1++;
		if(var1 == 0)
		var2++;
		
	    UP  = 0b00011000;//////////////
  9e:	05 bb       	out	0x15, r16	; 21
	    DWN = 0b01111111;
  a0:	1b bb       	out	0x1b, r17	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	86 e7       	ldi	r24, 0x76	; 118
  a4:	91 e0       	ldi	r25, 0x01	; 1
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <main+0x3a>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x40>
  ac:	00 00       	nop
	    _delay_us(DELAY);
	    UP  = 0b00100100;///////////////
  ae:	d5 bb       	out	0x15, r29	; 21
	    DWN = 0b10111111;
  b0:	cb bb       	out	0x1b, r28	; 27
  b2:	86 e7       	ldi	r24, 0x76	; 118
  b4:	91 e0       	ldi	r25, 0x01	; 1
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <main+0x4a>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x50>
  bc:	00 00       	nop
	    
		
		_delay_us(DELAY);
	    UP  = 0b01000010;//////////////
  be:	b5 bb       	out	0x15, r27	; 21
	    DWN = 0b11011111;
  c0:	ab bb       	out	0x1b, r26	; 27
  c2:	86 e7       	ldi	r24, 0x76	; 118
  c4:	91 e0       	ldi	r25, 0x01	; 1
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <main+0x5a>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x60>
  cc:	00 00       	nop
	    _delay_us(DELAY);
		
		
	    UP  = 0b00001000;//////////////
  ce:	f5 bb       	out	0x15, r31	; 21
	    DWN = 0b11101111;
  d0:	eb bb       	out	0x1b, r30	; 27
  d2:	86 e7       	ldi	r24, 0x76	; 118
  d4:	91 e0       	ldi	r25, 0x01	; 1
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <main+0x6a>
  da:	00 c0       	rjmp	.+0      	; 0xdc <main+0x70>
  dc:	00 00       	nop
	    _delay_us(DELAY);
	    UP  = 0b10010010;//////////////
  de:	75 bb       	out	0x15, r23	; 21
	    DWN = 0b11110111;
  e0:	6b bb       	out	0x1b, r22	; 27
  e2:	86 e7       	ldi	r24, 0x76	; 118
  e4:	91 e0       	ldi	r25, 0x01	; 1
  e6:	01 97       	sbiw	r24, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <main+0x7a>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x80>
  ec:	00 00       	nop
	    _delay_us(DELAY);
	    UP  = 0b01111100;//////////////
  ee:	55 bb       	out	0x15, r21	; 21
	    DWN = 0b11111011;
  f0:	4b bb       	out	0x1b, r20	; 27
  f2:	86 e7       	ldi	r24, 0x76	; 118
  f4:	91 e0       	ldi	r25, 0x01	; 1
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <main+0x8a>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <main+0x90>
  fc:	00 00       	nop
	    _delay_us(DELAY);
	    UP  = 0b00010000;//////////////
  fe:	35 bb       	out	0x15, r19	; 21
	    DWN = 0b11111101;
 100:	2b bb       	out	0x1b, r18	; 27
 102:	86 e7       	ldi	r24, 0x76	; 118
 104:	91 e0       	ldi	r25, 0x01	; 1
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <main+0x9a>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0xa0>
 10c:	00 00       	nop
	    _delay_us(DELAY);
	    UP  = 0b00111000;//////////////
 10e:	f5 ba       	out	0x15, r15	; 21
	    DWN = 0b11111110;
 110:	eb ba       	out	0x1b, r14	; 27
 112:	86 e7       	ldi	r24, 0x76	; 118
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <main+0xaa>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0xb0>
 11c:	00 00       	nop
 11e:	bf cf       	rjmp	.-130    	; 0x9e <main+0x32>

00000120 <_exit>:
 120:	f8 94       	cli

00000122 <__stop_program>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <__stop_program>
